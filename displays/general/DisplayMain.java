/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package displays.general;

import displays.general.DisplayLogin;
import displays.general.DisplayAbout;
import displays.tattoo_artist.DisplayInsertTattooArtist;
import displays.client.DisplayInsertClient;
import DAO.ClientDAO;
import displays.client.DisplayConsultClient;
import displays.client.DisplayUpdateClient;
import displays.tattoo_artist.DisplayDeleteTattooArtist;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.text.DateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Client;
import model.TattooArtist;

/**
 *
 * @author pedro
 */
public class DisplayMain extends javax.swing.JFrame {

    TattooArtist tattooArtist = null;
    public DisplayMain() {
        initComponents();
    }
    
    public DisplayMain(TattooArtist tattooArtist) {
        this.tattooArtist = tattooArtist;
        initComponents();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        list1 = new ArrayList<Client>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableClients = new javax.swing.JTable();
        jButtonRegisterClient = new javax.swing.JButton();
        jButtonConsult = new javax.swing.JButton();
        jLabelUserDisplay = new javax.swing.JLabel();
        jButtonDelete = new javax.swing.JButton();
        jLabelDataDisplay = new javax.swing.JLabel();
        jButtonUpdate = new javax.swing.JButton();
        jButtonEdit = new javax.swing.JButton();
        background = new javax.swing.JLabel();
        jMenuBarDisplayMain = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenuItemAddTattooArtist = new javax.swing.JMenuItem();
        jMenuItemDeleteTattooArtist = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemSobre = new javax.swing.JMenuItem();
        jMenuItemSair = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Main Display");
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });
        getContentPane().setLayout(null);

        jTableClients.setModel(new javax.swing.table.DefaultTableModel(
            new Client [][] {

            },
            new String [] {
                "Client", "Next session", "Tel"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableClients);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(160, 180, 960, 320);

        jButtonRegisterClient.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/add2.png"))); // NOI18N
        jButtonRegisterClient.setToolTipText("Register");
        jButtonRegisterClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegisterClientActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonRegisterClient);
        jButtonRegisterClient.setBounds(460, 590, 81, 57);

        jButtonConsult.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/consult.png"))); // NOI18N
        jButtonConsult.setToolTipText("Consult");
        jButtonConsult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConsultActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonConsult);
        jButtonConsult.setBounds(330, 590, 81, 57);

        jLabelUserDisplay.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelUserDisplay.setText("User");
        getContentPane().add(jLabelUserDisplay);
        jLabelUserDisplay.setBounds(155, 57, 570, 29);

        jButtonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/delete.png"))); // NOI18N
        jButtonDelete.setToolTipText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonDelete);
        jButtonDelete.setBounds(820, 590, 81, 57);

        jLabelDataDisplay.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelDataDisplay.setText("Date");
        getContentPane().add(jLabelDataDisplay);
        jLabelDataDisplay.setBounds(990, 60, 120, 29);

        jButtonUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/refresh.png"))); // NOI18N
        jButtonUpdate.setToolTipText("Refresh");
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonUpdate);
        jButtonUpdate.setBounds(580, 590, 81, 57);

        jButtonEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/edit.png"))); // NOI18N
        jButtonEdit.setToolTipText("Edit");
        jButtonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonEdit);
        jButtonEdit.setBounds(700, 590, 81, 57);

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/background.jpg"))); // NOI18N
        background.setMaximumSize(new java.awt.Dimension(1920, 1080));
        getContentPane().add(background);
        background.setBounds(0, 0, 1280, 699);

        jMenu2.setText("TattooArtist");

        jMenuItemAddTattooArtist.setText("Register new");
        jMenuItemAddTattooArtist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAddTattooArtistActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItemAddTattooArtist);

        jMenuItemDeleteTattooArtist.setText("Delete");
        jMenuItemDeleteTattooArtist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDeleteTattooArtistActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItemDeleteTattooArtist);

        jMenuBarDisplayMain.add(jMenu2);

        jMenu1.setText("Options");

        jMenuItemSobre.setText("About");
        jMenuItemSobre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSobreActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemSobre);

        jMenuItemSair.setText("Exit");
        jMenuItemSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSairActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemSair);

        jMenuBarDisplayMain.add(jMenu1);

        setJMenuBar(jMenuBarDisplayMain);

        setSize(new java.awt.Dimension(1296, 759));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        Date date = new Date();
        DateFormat dateFormat = DateFormat.getDateInstance(DateFormat.SHORT);
        jLabelDataDisplay.setText(dateFormat.format(date));
        refreshJTable();
        
    }//GEN-LAST:event_formWindowActivated

    private void jMenuItemSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSairActionPerformed
        int sair = JOptionPane.showConfirmDialog(null, "Do you really want to leave?", "Exit?", JOptionPane.YES_NO_OPTION);
        if (sair == JOptionPane.YES_OPTION) {
            this.dispose();
            DisplayLogin login = new DisplayLogin();
            login.setVisible(true);
        }
    }//GEN-LAST:event_jMenuItemSairActionPerformed

    private void jMenuItemSobreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSobreActionPerformed
        DisplayAbout aboutDisplay = new DisplayAbout();
        aboutDisplay.setVisible(true);
    }//GEN-LAST:event_jMenuItemSobreActionPerformed

    private void jMenuItemAddTattooArtistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAddTattooArtistActionPerformed
        DisplayInsertTattooArtist displatInsertTattooArtist = new DisplayInsertTattooArtist();
        displatInsertTattooArtist.setVisible(true);
    }//GEN-LAST:event_jMenuItemAddTattooArtistActionPerformed

    private void jMenuItemDeleteTattooArtistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDeleteTattooArtistActionPerformed
        DisplayDeleteTattooArtist displayDeleteTattooArtist = new DisplayDeleteTattooArtist(this.tattooArtist);
        displayDeleteTattooArtist.setVisible(true);
    }//GEN-LAST:event_jMenuItemDeleteTattooArtistActionPerformed

    private void jButtonRegisterClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegisterClientActionPerformed
        DisplayInsertClient registerClient = new DisplayInsertClient();
        registerClient.setVisible(true);
    }//GEN-LAST:event_jButtonRegisterClientActionPerformed

    private void jButtonConsultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConsultActionPerformed
        DefaultTableModel defaultTableModel = (DefaultTableModel) jTableClients.getModel();
        int row = jTableClients.getSelectedRow();
        if (row != -1) {
            // at column 0 we have a client object
            Client client = (Client) jTableClients.getModel().getValueAt(row, 0);
            DisplayConsultClient displayConsultClient = new DisplayConsultClient(client);
            displayConsultClient.setVisible(true);
        }
    }//GEN-LAST:event_jButtonConsultActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        int confirm = JOptionPane.showConfirmDialog(null, "Do you really wanna to delete it?", "", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            DefaultTableModel defaultTableModel = (DefaultTableModel) jTableClients.getModel();
            int row = jTableClients.getSelectedRow();
            if (row != -1) {
                // at column 0 we have a client object
                Client client = (Client) jTableClients.getModel().getValueAt(row, 0);
                defaultTableModel.removeRow(row);
                try {
                    //now we can delete the specific client
                    if(ClientDAO.delete(client)){
                        JOptionPane.showMessageDialog(null, "Delete sucess!","",JOptionPane.INFORMATION_MESSAGE);
                    }else{
                        JOptionPane.showMessageDialog(null, "Error on delete!","",JOptionPane.ERROR_MESSAGE);
                    }
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(DisplayMain.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(DisplayMain.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
        refreshJTable();
    }//GEN-LAST:event_jButtonUpdateActionPerformed

    private void refreshJTable() {
        DefaultTableModel defaultTableModel = (DefaultTableModel) jTableClients.getModel();
        while (defaultTableModel.getRowCount() > 0) {
            defaultTableModel.removeRow(0);
        }
        try {
            ArrayList<Client> arrayListClient = ClientDAO.consultAll();
            
            Object rowData[] = new Object[3];
            for (int i = 0; i < arrayListClient.size(); i++) {
                rowData[0] = (Client) arrayListClient.get(i);
                rowData[1] = arrayListClient.get(i).getNext_session();
                rowData[2] = arrayListClient.get(i).getTel();
                defaultTableModel.addRow(rowData);
            }
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DisplayMain.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(DisplayMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void jButtonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditActionPerformed
        int confirm = JOptionPane.showConfirmDialog(null, "Do you really wanna to edit it?", "", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            DefaultTableModel defaultTableModel = (DefaultTableModel) jTableClients.getModel();
            int row = jTableClients.getSelectedRow();
            if (row != -1) {
                // at column 0 we have a client object
                Client client = (Client) jTableClients.getModel().getValueAt(row, 0);
                DisplayUpdateClient displayUpdateUser = new DisplayUpdateClient(client);
                displayUpdateUser.setVisible(true);
            }
        }
    }//GEN-LAST:event_jButtonEditActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DisplayMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DisplayMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DisplayMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DisplayMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DisplayMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private javax.swing.JButton jButtonConsult;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonEdit;
    private javax.swing.JButton jButtonRegisterClient;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JLabel jLabelDataDisplay;
    public static javax.swing.JLabel jLabelUserDisplay;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBarDisplayMain;
    private javax.swing.JMenuItem jMenuItemAddTattooArtist;
    private javax.swing.JMenuItem jMenuItemDeleteTattooArtist;
    private javax.swing.JMenuItem jMenuItemSair;
    private javax.swing.JMenuItem jMenuItemSobre;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableClients;
    private java.util.List<Client> list1;
    // End of variables declaration//GEN-END:variables
}
